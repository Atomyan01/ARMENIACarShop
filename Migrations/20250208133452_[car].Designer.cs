// <auto-generated />
using System;
using ARMENIACarShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ARMENIACarShop.Migrations
{
    [DbContext(typeof(ARMENIACarShopContext))]
    [Migration("20250208133452_[car]")]
    partial class car
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ARMENIACarShop.Models.CarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarMileage")
                        .HasColumnType("int");

                    b.Property<bool>("Damaged")
                        .HasColumnType("bit");

                    b.Property<bool>("Electric")
                        .HasColumnType("bit");

                    b.Property<int>("EngineCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("RunAndDrive")
                        .HasColumnType("bit");

                    b.Property<int?>("SellerModelId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UnderWater")
                        .HasColumnType("bit");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SellerModelId");

                    b.ToTable("CarModel");
                });

            modelBuilder.Entity("ARMENIACarShop.Models.PersonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PersonModel");

                    b.HasDiscriminator().HasValue("PersonModel");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ARMENIACarShop.Models.BuyerModel", b =>
                {
                    b.HasBaseType("ARMENIACarShop.Models.PersonModel");

                    b.HasDiscriminator().HasValue("BuyerModel");
                });

            modelBuilder.Entity("ARMENIACarShop.Models.SellerModel", b =>
                {
                    b.HasBaseType("ARMENIACarShop.Models.PersonModel");

                    b.Property<double>("AvarageScore")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("SellerModel");
                });

            modelBuilder.Entity("ARMENIACarShop.Models.CarModel", b =>
                {
                    b.HasOne("ARMENIACarShop.Models.SellerModel", null)
                        .WithMany("Cars")
                        .HasForeignKey("SellerModelId");
                });

            modelBuilder.Entity("ARMENIACarShop.Models.SellerModel", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
